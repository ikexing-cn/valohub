generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model Account {
  id             Int            @id @default(autoincrement())
  qq             String         @unique
  verifyPassword String
  needVerify     Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  valorantInfo   ValorantInfo[]
}

model ValorantInfo {
  id             Int         @id @default(autoincrement())
  accountQQ      String
  alias          String      @default("default")
  remember       Boolean
  riotUsername   String      @unique
  riotPassword   String
  shard          Shard
  region         Region
  uuid           String      @unique
  country        String
  gameName       String
  tagLine        String
  tokens         Json
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  deleteStatus   Boolean     @default(false)
  accessoryStore StoreList[] @relation("AccessoryStoreRelation")
  bonusStore     StoreList[] @relation("BonusStoreRelation")
  dailyStores    StoreList[] @relation("DailyStoresRelation")
  account        Account     @relation(fields: [accountQQ], references: [qq])
}

model StoreList {
  id                      Int                      @id @default(autoincrement())
  bonusValorantInfoId     Int?
  dailyValorantInfoId     Int?
  accessoryValorantInfoId Int?
  createdAt               DateTime                 @default(now())
  updateAt                DateTime                 @updatedAt
  ValorantInfoAccessory   ValorantInfo?            @relation("AccessoryStoreRelation", fields: [accessoryValorantInfoId], references: [id])
  ValorantInfoBonus       ValorantInfo?            @relation("BonusStoreRelation", fields: [bonusValorantInfoId], references: [id])
  ValorantInfoDaily       ValorantInfo?            @relation("DailyStoresRelation", fields: [dailyValorantInfoId], references: [id])
  storeListStoreItem      StoreListWithStoreItem[]
}

model StoreItem {
  id                 Int                      @id @default(autoincrement())
  cost               Int
  costType           CostType
  uuid               String                   @unique
  storeListStoreItem StoreListWithStoreItem[]
}

model StoreListWithStoreItem {
  storeListId Int
  storeItemId Int
  storeItem   StoreItem @relation(fields: [storeItemId], references: [id])
  storeList   StoreList @relation(fields: [storeListId], references: [id])

  @@id([storeListId, storeItemId])
}

enum Region {
  NA
  EU
  AP
  KR
  LATAM
  BR
}

enum Shard {
  NA
  EU
  AP
  KR
  PBE
}

enum CostType {
  VP
  RP
  KC
}
